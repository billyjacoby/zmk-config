/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// #include "./macros.dtsi"
// #include "./behaviors.dtsi"

nice_view_spi: &spi0 {
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names =
        "default",
        "sleep";

    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};

/ {
    macros {
        macro_layer1_pause_release: macro_layer1_pause_release {
            compatible = "zmk,behavior-macro";
            label = "macro_layer1_pause_release";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1>,
                <&macro_tap>,
                <&to 0>;
        };
        macro_layer2_pause_release: macro_layer2_pause_release {
            compatible = "zmk,behavior-macro";
            label = "macro_layer2_pause_release";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 2>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 2>,
                <&macro_tap>,
                <&to 0>;
        };
        macro_cmd_space: macro_cmd_space {
            compatible = "zmk,behavior-macro";
            label = "macro_cmd_space";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
        macro_arrow_function: macro_arrow_function {
            compatible = "zmk,behavior-macro";
            label = "macro_arrow_function";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_tap>,
                <&kp GREATER_THAN>;
        };
        control_right: control_right {
            compatible = "zmk,behavior-macro";
            label = "control_right";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;
        };
        control_left: control_left {
            compatible = "zmk,behavior-macro";
            label = "control_left";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;
        };
        emoji_press: emoji_press {
            compatible = "zmk,behavior-macro";
            label = "emoji_press";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND>;
        };
        arrow_functions: arrow_functions {
            compatible = "zmk,behavior-macro";
            label = "arrow_functions";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LEFT_PARENTHESIS>,
                <&macro_tap>,
                <&kp RIGHT_PARENTHESIS>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_tap>,
                <&kp GREATER_THAN>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_tap>,
                <&kp LEFT_BRACE>,
                <&macro_tap>,
                <&kp RIGHT_BRACE>,
                <&macro_tap>,
                <&kp LEFT>;
        };
    };

    behaviors {
        ht_tp_l1: hold_tap_layer_1 {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER_1";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&macro_layer1_pause_release &kp>;
        };
        ht_tp_l2: hold_tap_layer_2 {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER_2";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&macro_layer2_pause_release &kp>;
        };
        td_ctrl_opt: tap_dance_control_option {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CONTROL_OPTION";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LEFT_CONTROL>,
                <&kp LEFT_ALT>;
        };
        td_arrow_function: tap_dance_arrow_function {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_ARROW_FUNCTION";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp SEMI>,
                <&macro_arrow_function>;
        };
        td_brackets_open: tap_dance_brackets_open {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BRACKETS_OPEN";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LEFT_BRACE>,
                <&kp LBKT>,
                <&kp LEFT_PARENTHESIS>;
        };
        td_brackets_close: tap_dance_brackets_close {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BRACKETS_CLOSE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp RIGHT_BRACE>,
                <&kp RBKT>,
                <&kp RIGHT_PARENTHESIS>;
        };
        arrow_func_full: new-behavior {
            compatible = "zmk,behavior-tap-dance";
            label = "NEW_BEHAVIOR";
            #binding-cells = <0>;
            bindings =
                <&macro_arrow_function>,
                <&arrow_functions>;

            tapping-term-ms = <400>;
        };
        dbl_tap_hold: dbl_tap_hold {
            compatible = "zmk,behavior-tap-dance";
            label = "DBL_TAP_HOLD";
            #binding-cells = <0>;
            bindings =
                <&lt 2 ENTER>,
                <&lt 5 ENTER>;
        };
        td_opt_tog: td_opt_tog {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_OPT_TOG";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_ALT>,
                <&kt LALT>;
        };
        td_quote_grave: td_quote_grave {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUOTE_GRAVE";
            #binding-cells = <0>;
            bindings =
                <&kp DOUBLE_QUOTES>,
                <&kp GRAVE>,
                <&kp SINGLE_QUOTE>;

            tapping-term-ms = <150>;
        };
        td_ctrl_tog: td_ctrl_tog {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CTRL_TOG";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_CONTROL>,
                <&kt LCTRL>;
        };
        td_cmd_tog: td_cmd_tog {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CMD_TOG";
            #binding-cells = <0>;
            bindings =
                <&kp LGUI>,
                <&kt LGUI>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        raycast {
            bindings = <&macro_cmd_space>;
            key-positions = <53 42>;
            layers = <0 3 1 2>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
            layers = <0 1 2 3 5 4>;
        };

        shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <13 14>;
            layers = <0 1 2 3 5 4>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <25 26>;
            layers = <3 2 1 0 4 5>;
        };

        bkspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 9>;
        };

        quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <22 21>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <34 33>;
        };

        hr_tab {
            bindings = <&kp TAB>;
            key-positions = <16 15>;
        };

        hr_bkspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC         &kp Q  &kp W  &kp E         &kp R         &kp T        &kp Y        &kp U      &kp I             &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F         &kp G        &kp H        &kp J      &kp K             &kp L    &kp SEMI  &td_quote_grave
&kp TAB         &kp Z  &kp X  &kp C         &kp V         &kp B        &kp N        &kp M      &kp COMMA         &kp DOT  &kp FSLH  &kp MINUS
                              &kp LEFT_ALT  &kp LEFT_GUI  &lt 1 SPACE  &lt 2 ENTER  &kp GRAVE  &kp LEFT_CONTROL
            >;

            label = "main";
        };

        Raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp EQUAL        &kp N1     &kp N2     &kp N3     &kp N4     &kp N5             &kp N6              &kp N7  &kp N8  &kp N9  &kp N0         &kp BSPC
&trans           &none      &kp LG(S)  &none      &none      &td_brackets_open  &td_brackets_close  &none   &none   &none   &trans         &trans
&rgb_ug RGB_TOG  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(SPACE)      &none               &none   &trans  &trans  &kp BACKSLASH  &none
                                       &trans     &mo 4      &trans             &trans              &trans  &trans
            >;

            label = "raise";
        };

        Lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp EQUAL  &kp NUMBER_1       &kp NUMBER_2        &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5       &kp NUMBER_6        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0   &kp BSPC
&trans     &kp LBKT           &kp RBKT            &none         &none         &td_brackets_open  &td_brackets_close  &none         &kp UP        &none         &none          &kp PAGE_UP
&none      &td_brackets_open  &td_brackets_close  &none         &none         &kp LG(SPACE)      &none               &kp LEFT      &kp DOWN      &kp RIGHT     &kp BACKSLASH  &kp PAGE_DOWN
                                                  &trans        &trans        &trans             &trans              &mo 5         &trans
            >;

            label = "lower";
        };

        RaiseLower {
            bindings = <
&kp PLUS    &kp EXCL  &kp AT  &kp POUND  &kp DOLLAR    &kp PERCENT        &kp CARET            &kp AMPERSAND     &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LA(BACKSPACE)
&caps_word  &none     &none   &none      &none         &td_brackets_open  &td_brackets_close   &kp F2            &kp F12       &kp C_VOL_DN          &kp C_VOLUME_UP        &kp GRAVE
&trans      &none     &none   &none      &kp LC(DOWN)  &kp LC(LEFT)       &kp RC(RIGHT_ARROW)  &kp LC(UP_ARROW)  &none         &arrow_func_full      &kp PIPE               &trans
                              &trans     &trans        &trans             &trans               &trans            &trans
            >;

            label = "raiseLower";
        };

        Navigation {
            bindings = <
&trans  &none         &none         &none         &none         &none       &none   &none         &none         &none          &none  &trans
&none   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 2  &bt BT_CLR  &none   &none         &kp LA(UP)    &none          &none  &none
&none   &none         &none         &none         &none         &none       &none   &kp LA(LEFT)  &kp LA(DOWN)  &kp LA(RIGHT)  &none  &none
                                    &trans        &trans        &trans      &trans  &trans        &trans
            >;

            label = "nav";
        };

        ConfigRight {
            bindings = <
&trans           &none            &none            &none            &none            &none   &none   &none   &none   &none  &none  &trans
&rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &none   &none   &none   &none   &none  &none  &none
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &none   &none   &none   &none   &none  &none  &none
                                                   &trans           &trans           &trans  &trans  &trans  &trans
            >;
        };
    };
};
